[[0.164605,{"lines":{"0":[["root@ubuntu:~#                                                                                                                                         ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":15,"y":0,"visible":true}}],[0.6928530000000001,{"lines":{"0":[["root@ubuntu:~# v                                                                                                                                       ",{}]]},"cursor":{"x":16}}],[0.168426,{"lines":{"0":[["root@ubuntu:~# vi                                                                                                                                      ",{}]]},"cursor":{"x":17}}],[0.175418,{"lines":{"0":[["root@ubuntu:~# vim                                                                                                                                     ",{}]]},"cursor":{"x":18}}],[0.178484,{"cursor":{"x":19}}],[0.740822,{"lines":{"0":[["root@ubuntu:~# vim v                                                                                                                                   ",{}]]},"cursor":{"x":20}}],[0.219197,{"lines":{"0":[["root@ubuntu:~# vim vi                                                                                                                                  ",{}]]},"cursor":{"x":21}}],[0.194291,{"lines":{"0":[["root@ubuntu:~# vim vim                                                                                                                                 ",{}]]},"cursor":{"x":22}}],[0.9876239999999999,{"lines":{"0":[["root@ubuntu:~# vim vim/                                                                                                                                ",{}]]},"cursor":{"x":23}}],[1.340127,{"lines":{"0":[["root@ubuntu:~# vim vim/v                                                                                                                               ",{}]]},"cursor":{"x":24}}],[0.131988,{"lines":{"0":[["root@ubuntu:~# vim vim/vi                                                                                                                              ",{}]]},"cursor":{"x":25}}],[0.173915,{"lines":{"0":[["root@ubuntu:~# vim vim/vim.                                                                                                                            ",{}]]},"cursor":{"x":27}}],[1.026991,{"lines":{"0":[["root@ubuntu:~# vim vim/vim.p                                                                                                                           ",{}]]},"cursor":{"x":28}}],[0.108273,{}],[0.151784,{"cursor":{"x":0,"y":1}}],[0.076442,{"lines":{"0":[["                                                                                                                                                       ",{}]]}}],[0.001248,{"lines":{"38":[["\"vim.p\" [新文件]                                                                                                                                       ",{}]]},"cursor":{"x":16,"y":38,"visible":false}}],[0.052204,{}],[0.004351,{"lines":{"0":[["    ",{"fg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["                                                                                                                                               ",{"underline":true}]],"1":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"2":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"3":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"4":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"5":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"6":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"7":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"8":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"9":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"10":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"11":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"12":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"13":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"14":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"15":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"16":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"17":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"18":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"19":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"20":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"21":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"22":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"23":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"24":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"25":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"26":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"27":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"28":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"29":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"30":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"31":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"32":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"33":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"34":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"35":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"36":[["    ",{"fg":0,"bold":true}],["~                                                                                                                                                  ",{"fg":4}]],"37":[["vim.p                                                                                                                                                  ",{"bold":true,"inverse":true}]]},"cursor":{"x":8,"y":0,"visible":true}}],[0.941862,{"lines":{"38":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":38}}],[0.128607,{"lines":{"38":[[":q                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.12161,{"lines":{"0":[["root@ubuntu:~# vim vim/vim.p                                                                                                                           ",{}]],"1":[["                                                                                                                                                       ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]]},"cursor":{"x":0,"y":1}}],[0.0005730000000000001,{"lines":{"1":[["root@ubuntu:~#                                                                                                                                         ",{}]]},"cursor":{"x":15}}],[0.335529,{"lines":{"1":[["root@ubuntu:~# vim vim/vim.p                                                                                                                           ",{}]]},"cursor":{"x":28}}],[0.72487,{"lines":{"1":[["root@ubuntu:~# vim vim/vim.ph                                                                                                                          ",{}]]},"cursor":{"x":29}}],[0.106423,{"lines":{"1":[["root@ubuntu:~# vim vim/vim.php                                                                                                                         ",{}]]},"cursor":{"x":31}}],[0.155506,{"cursor":{"x":0,"y":2}}],[0.086116,{"lines":{"0":[["                                                                                                                                                       ",{}]],"1":[["                                                                                                                                                       ",{}]]}}],[0.000829,{"lines":{"38":[["\"vim.php\" 686L, 22281C                                                                                                                                 ",{}]]},"cursor":{"x":22,"y":38,"visible":false}}],[0.022663,{}],[0.006473,{"lines":{"0":[["    ",{"fg":0,"bold":true}],["  1 ",{"fg":3,"bold":true}],["<?php",{"fg":1,"bold":true,"underline":true}],["                                                                                                                                          ",{"underline":true}]],"1":[["    ",{"fg":0,"bold":true}],["  2 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"2":[["    ",{"fg":0,"bold":true}],["  3 ",{"fg":3}],[" * This file contains the foundation classes for component-based and event-driven programming.",{"fg":4,"bold":true}],["                                                 ",{}]],"3":[["    ",{"fg":0,"bold":true}],["  4 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3}],[" * @author Qiang Xue <qiang.xue@gmail.com>",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @link http://www.yiiframework.com/",{"fg":4,"bold":true}],["                                                                                                          ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true}],["                                                                                      ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],["                                                                                                                                               ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"37":[["vim.php                                                                                                                                                ",{"bold":true,"inverse":true}]]},"cursor":{"x":8,"y":0,"visible":true}}],[0.415417,{"lines":{"0":[["    ",{"fg":0,"bold":true}],["  1 ",{"fg":3}],["<?php",{"fg":1,"bold":true}],["                                                                                                                                          ",{}]],"1":[["    ",{"fg":0,"bold":true}],["  2 ",{"fg":3,"bold":true}],["/**",{"fg":4,"bold":true,"underline":true}],["                                                                                                                                            ",{"underline":true}]]},"cursor":{"y":1}}],[0.168731,{"lines":{"1":[["    ",{"fg":0,"bold":true}],["  2 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"2":[["    ",{"fg":0,"bold":true}],["  3 ",{"fg":3,"bold":true}],[" * This file contains the foundation classes for component-based and event-driven programming.",{"fg":4,"bold":true,"underline":true}],["                                                 ",{"underline":true}]]},"cursor":{"y":2}}],[0.137246,{"lines":{"2":[["    ",{"fg":0,"bold":true}],["  3 ",{"fg":3}],[" * This file contains the foundation classes for component-based and event-driven programming.",{"fg":4,"bold":true}],["                                                 ",{}]],"3":[["    ",{"fg":0,"bold":true}],["  4 ",{"fg":3,"bold":true}],[" *",{"fg":4,"bold":true,"underline":true}],["                                                                                                                                             ",{"underline":true}]]},"cursor":{"y":3}}],[0.128592,{"lines":{"39":[["                                                                                                                                            j          ",{}]]},"cursor":{"visible":false}}],[0.002979,{"lines":{"3":[["    ",{"fg":0,"bold":true}],["  4 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @author Qiang Xue <qiang.xue@gmail.com>",{"fg":4,"bold":true,"underline":true}],["                                                                                                     ",{"underline":true}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"y":4,"visible":true}}],[0.477527,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[0.171612,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @link http://www.yiiframework.com/",{"fg":4,"bold":true,"underline":true}],["                                                                                                          ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true}],["                                                                                      ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],["                                                                                                                                               ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $componponent->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"38":[["少了 1 行                                                                                                                                              ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":60,"y":20,"visible":false}}],[0.000116,{"lines":{"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"37":[["vim.php [+]                                                                                                                                            ",{"bold":true,"inverse":true}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.410201,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[0.142034,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true,"underline":true}],["                                                                                      ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],["                                                                                                                                               ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * The signatures of",{"fg":4,"bold":true}],["                                                                                                                           ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":28,"y":21,"visible":false}}],[5.3e-05,{"lines":{"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.159561,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[0.259383,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true,"underline":true}],["                                                                                               ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],["                                                                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * <pre>ignatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":16,"y":21,"visible":false}}],[5.5e-05,{"lines":{"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.180002,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[2.23007,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" */",{"fg":4,"bold":true,"underline":true}],["                                                                                                                                            ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],["                                                                                                                                               ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * // getter, defines a r",{"fg":4,"bold":true}],["                                                                                                                      ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":33,"y":21,"visible":false}}],[7.2e-05,{"lines":{"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[1.373649,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[0.402912,{"lines":{"39":[["                                                                                                                                            d5         ",{}]]}}],[0.290166,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true,"underline":true}],["                                                                ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * phe signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"38":[["少了 5 行                                                                                                                                              ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":12,"y":19,"visible":false}}],[0.000108,{"lines":{"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[2.777056,{"lines":{"39":[["                                                                                                                                            5          ",{}]]}}],[0.387639,{"lines":{"39":[["                                                                                                                                            5d         ",{}]]}}],[0.247764,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * getter or setter method, e.g",{"fg":4,"bold":true,"underline":true}],["                                                                                                                ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * (called event handlers) attached to the ",{"fg":4,"bold":true}],["                                                                                                    ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":51,"y":19,"visible":false}}],[0.000109,{"lines":{"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * $component->onClick=$callback;    // or $component->onClick->add($callback);",{"fg":4,"bold":true}],["                                                                ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * where $callback refers to a valid PHP callback. Below we show some callback examples:",{"fg":4,"bold":true}],["                                                       ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * 'handleOnClick'                   // handleOnClick() is a global function",{"fg":4,"bold":true}],["                                                                   ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[3.656112,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[1.291944,{"lines":{"39":[["                                                                                                                                            d5         ",{}]]}}],[0.503899,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true,"underline":true}],["                                                                                 ",{"underline":true}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following ons",{"fg":4,"bold":true}],["                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":77,"y":18,"visible":false}}],[0.000113,{"lines":{"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * $component->onClick=$callback;    // or $component->onClick->add($callback);",{"fg":4,"bold":true}],["                                                                ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * where $callback refers to a valid PHP callback. Below we show some callback examples:",{"fg":4,"bold":true}],["                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * 'handleOnClick'                   // handleOnClick() is a global function",{"fg":4,"bold":true}],["                                                                   ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * array($object,'handleOnClick')    // using $object->handleOnClick()",{"fg":4,"bold":true}],["                                                                         ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * array('Page','handleOnClick')     // using Page::handleOnClick()",{"fg":4,"bold":true}],["                                                                            ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * To raise an event, use {@link raiseEvent}. The on-method defining an event is",{"fg":4,"bold":true}],["                                                               ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[2.695188,{"lines":{"39":[["                                                                                                                                            d          ",{}]]}}],[2.892409,{"lines":{"39":[["                                                                                                                                            d^[        ",{}]]}}],[0.644764,{"lines":{"39":[["                                                                                                                                            ^[         ",{}]]}}],[0.329017,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3,"bold":true}],[" * <pre>",{"fg":4,"bold":true,"underline":true}],["                                                                                                                                       ",{"underline":true}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"y":5}}],[0.311478,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true,"underline":true}],["                                                                                 ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"y":4}}],[1.445217,{"lines":{"39":[["                                                                                                                                            5          ",{}]]}}],[0.467568,{"lines":{"39":[["                                                                                                                                            5d         ",{}]]}}],[0.459391,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * public function setText($value) { ... }",{"fg":4,"bold":true,"underline":true}],["                                                                                                     ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * To attach an event handler to an event, see {@link atta",{"fg":4,"bold":true}],["                                                                                     ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":66,"y":19,"visible":false}}],[7.1e-05,{"lines":{"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * $component->onClick=$callback;    // or $component->onClick->add($callback);",{"fg":4,"bold":true}],["                                                                ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * where $callback refers to a valid PHP callback. Below we show some callback examples:",{"fg":4,"bold":true}],["                                                       ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * 'handleOnClick'                   // handleOnClick() is a global function",{"fg":4,"bold":true}],["                                                                   ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * array($object,'handleOnClick')    // using $object->handleOnClick()",{"fg":4,"bold":true}],["                                                                         ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * array('Page','handleOnClick')     // using Page::handleOnClick()",{"fg":4,"bold":true}],["                                                                            ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * To raise an event, use {@link raiseEvent}. The on-method defining an event is",{"fg":4,"bold":true}],["                                                               ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * commonly written like the following:",{"fg":4,"bold":true}],["                                                                                                        ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * public function onClick($event)",{"fg":4,"bold":true}],["                                                                                                             ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * {",{"fg":4,"bold":true}],["                                                                                                                                           ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" *     $this->raiseEvent('onClick',$event);",{"fg":4,"bold":true}],["                                                                                                    ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[1.821143,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true,"underline":true}],["                                                                                 ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * are attached to the event. Eve",{"fg":4,"bold":true}],["                                                                                                              ",{}]],"38":[["5 行被加入；before #8  2 秒之前                                                                                                                        ",{}]]},"cursor":{"x":41,"y":18,"visible":false}}],[0.000183,{"lines":{"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * $component->onClick=$callback;    // or $component->onClick->add($callback);",{"fg":4,"bold":true}],["                                                                ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * where $callback refers to a valid PHP callback. Below we show some callback examples:",{"fg":4,"bold":true}],["                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * 'handleOnClick'                   // handleOnClick() is a global function",{"fg":4,"bold":true}],["                                                                   ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * array($object,'handleOnClick')    // using $object->handleOnClick()",{"fg":4,"bold":true}],["                                                                         ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * array('Page','handleOnClick')     // using Page::handleOnClick()",{"fg":4,"bold":true}],["                                                                            ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * To raise an event, use {@link raiseEvent}. The on-method defining an event is",{"fg":4,"bold":true}],["                                                               ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.499347,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * getter or setter method, e.g",{"fg":4,"bold":true,"underline":true}],["                                                                                                                ",{"underline":true}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * (called event handlers) attached to the event will b",{"fg":4,"bold":true}],["                                                                                        ",{}]],"38":[["5 行被加入；before #7  12 秒之前                                                                                                                       ",{}]]},"cursor":{"x":63,"y":19,"visible":false}}],[8.4e-05,{"lines":{"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * $component->onClick=$callback;    // or $component->onClick->add($callback);",{"fg":4,"bold":true}],["                                                                ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * where $callback refers to a valid PHP callback. Below we show some callback examples:",{"fg":4,"bold":true}],["                                                       ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * 'handleOnClick'                   // handleOnClick() is a global function",{"fg":4,"bold":true}],["                                                                   ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.03199,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true,"underline":true}],["                                                                ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * public functionandlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"38":[["5 行被加入；before #6  17 秒之前                                                                                                                       ",{}]]},"cursor":{"x":26,"y":19,"visible":false}}],[0.000141,{"lines":{"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * where $event includes parameters associated with the event.",{"fg":4,"bold":true}],["                                                                                 ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * To attach an event handler to an event, see {@link attachEventHandler}.",{"fg":4,"bold":true}],["                                                                     ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * You can also use the following syntax:",{"fg":4,"bold":true}],["                                                                                                      ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.030361,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" */",{"fg":4,"bold":true,"underline":true}],["                                                                                                                                            ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],["                                                                                                                                               ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"38":[["5 行被加入；before #5  21 秒之前                                                                                                                       ",{}]]},"cursor":{"x":16,"y":20,"visible":false}}],[6.999999999999999e-05,{"lines":{"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.033427,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true,"underline":true}],["                                                                                               ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],["                                                                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * The signatures of getter and setter methods ar",{"fg":4,"bold":true}],["                                                                                              ",{}]],"38":[["1 行被加入；before #4  23 秒之前                                                                                                                       ",{}]]},"cursor":{"x":57,"y":20,"visible":false}}],[0.000138,{"lines":{"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * function eventHandler($event) { ... }",{"fg":4,"bold":true}],["                                                                                                       ",{}]]},"cursor":{"x":9,"y":4,"visible":true}}],[0.03196,{"lines":{"38":[["1 行被加入；before #3  25 秒之前                                                                                                                       ",{}]]},"cursor":{"visible":false}}],[0.000692,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true,"underline":true}],["                                                                                      ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],["                                                                                                                                               ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]]},"cursor":{"visible":true}}],[0.024712,{"lines":{"39":[["                                                                                                                                            u          ",{}]]},"cursor":{"visible":false}}],[0.005504999999999999,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @link http://www.yiiframework.com/",{"fg":4,"bold":true,"underline":true}],["                                                                                                          ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true}],["                                                                                      ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],["                                                                                                                                               ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * are attached to the event. Event handlers must have the following signature,",{"fg":4,"bold":true}],["                                                                ",{}]],"38":[["1 行被加入；before #2  26 秒之前                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"visible":true}}],[0.026041,{"lines":{"39":[["                                                                                                                                            u          ",{}]]},"cursor":{"visible":false}}],[0.005544,{"lines":{"4":[["    ",{"fg":0,"bold":true}],["  5 ",{"fg":3,"bold":true}],[" * @author Qiang Xue <qiang.xue@gmail.com>",{"fg":4,"bold":true,"underline":true}],["                                                                                                     ",{"underline":true}]],"5":[["    ",{"fg":0,"bold":true}],["  6 ",{"fg":3}],[" * @link http://www.yiiframework.com/",{"fg":4,"bold":true}],["                                                                                                          ",{}]],"6":[["    ",{"fg":0,"bold":true}],["  7 ",{"fg":3}],[" * @copyright Copyright &copy; 2008-2011 Yii Software LLC",{"fg":4,"bold":true}],["                                                                                      ",{}]],"7":[["    ",{"fg":0,"bold":true}],["  8 ",{"fg":3}],[" * @license http://www.yiiframework.com/license/",{"fg":4,"bold":true}],["                                                                                               ",{}]],"8":[["    ",{"fg":0,"bold":true}],["  9 ",{"fg":3}],[" */",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"9":[["    ",{"fg":0,"bold":true}],[" 10 ",{"fg":3}],["                                                                                                                                               ",{}]],"10":[["    ",{"fg":0,"bold":true}],[" 11 ",{"fg":3}],["/**",{"fg":4,"bold":true}],["                                                                                                                                            ",{}]],"11":[["    ",{"fg":0,"bold":true}],[" 12 ",{"fg":3}],[" * CComponent is the base class for all components.",{"fg":4,"bold":true}],["                                                                                            ",{}]],"12":[["    ",{"fg":0,"bold":true}],[" 13 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"13":[["    ",{"fg":0,"bold":true}],[" 14 ",{"fg":3}],[" * CComponent implements the protocol of defining, using properties and events.",{"fg":4,"bold":true}],["                                                                ",{}]],"14":[["    ",{"fg":0,"bold":true}],[" 15 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"15":[["    ",{"fg":0,"bold":true}],[" 16 ",{"fg":3}],[" * A property is defined by a getter method, and/or a setter method.",{"fg":4,"bold":true}],["                                                                           ",{}]],"16":[["    ",{"fg":0,"bold":true}],[" 17 ",{"fg":3}],[" * Properties can be accessed in the way like accessing normal object members.",{"fg":4,"bold":true}],["                                                                 ",{}]],"17":[["    ",{"fg":0,"bold":true}],[" 18 ",{"fg":3}],[" * Reading or writing a property will cause the invocation of the corresponding",{"fg":4,"bold":true}],["                                                                ",{}]],"18":[["    ",{"fg":0,"bold":true}],[" 19 ",{"fg":3}],[" * getter or setter method, e.g",{"fg":4,"bold":true}],["                                                                                                                ",{}]],"19":[["    ",{"fg":0,"bold":true}],[" 20 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"20":[["    ",{"fg":0,"bold":true}],[" 21 ",{"fg":3}],[" * $a=$component->text;     // equivalent to $a=$component->getText();",{"fg":4,"bold":true}],["                                                                         ",{}]],"21":[["    ",{"fg":0,"bold":true}],[" 22 ",{"fg":3}],[" * $component->text='abc';  // equivalent to $component->setText('abc');",{"fg":4,"bold":true}],["                                                                       ",{}]],"22":[["    ",{"fg":0,"bold":true}],[" 23 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"23":[["    ",{"fg":0,"bold":true}],[" 24 ",{"fg":3}],[" * The signatures of getter and setter methods are as follows,",{"fg":4,"bold":true}],["                                                                                 ",{}]],"24":[["    ",{"fg":0,"bold":true}],[" 25 ",{"fg":3}],[" * <pre>",{"fg":4,"bold":true}],["                                                                                                                                       ",{}]],"25":[["    ",{"fg":0,"bold":true}],[" 26 ",{"fg":3}],[" * // getter, defines a readable property 'text'",{"fg":4,"bold":true}],["                                                                                               ",{}]],"26":[["    ",{"fg":0,"bold":true}],[" 27 ",{"fg":3}],[" * public function getText() { ... }",{"fg":4,"bold":true}],["                                                                                                           ",{}]],"27":[["    ",{"fg":0,"bold":true}],[" 28 ",{"fg":3}],[" * // setter, defines a writable property 'text' with $value to be set to the property",{"fg":4,"bold":true}],["                                                         ",{}]],"28":[["    ",{"fg":0,"bold":true}],[" 29 ",{"fg":3}],[" * public function setText($value) { ... }",{"fg":4,"bold":true}],["                                                                                                     ",{}]],"29":[["    ",{"fg":0,"bold":true}],[" 30 ",{"fg":3}],[" * </pre>",{"fg":4,"bold":true}],["                                                                                                                                      ",{}]],"30":[["    ",{"fg":0,"bold":true}],[" 31 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"31":[["    ",{"fg":0,"bold":true}],[" 32 ",{"fg":3}],[" * An event is defined by the presence of a method whose name starts with 'on'.",{"fg":4,"bold":true}],["                                                                ",{}]],"32":[["    ",{"fg":0,"bold":true}],[" 33 ",{"fg":3}],[" * The event name is the method name. When an event is raised, functions",{"fg":4,"bold":true}],["                                                                       ",{}]],"33":[["    ",{"fg":0,"bold":true}],[" 34 ",{"fg":3}],[" * (called event handlers) attached to the event will be invoked automatically.",{"fg":4,"bold":true}],["                                                                ",{}]],"34":[["    ",{"fg":0,"bold":true}],[" 35 ",{"fg":3}],[" *",{"fg":4,"bold":true}],["                                                                                                                                             ",{}]],"35":[["    ",{"fg":0,"bold":true}],[" 36 ",{"fg":3}],[" * An event can be raised by calling {@link raiseEvent} method, upon which",{"fg":4,"bold":true}],["                                                                     ",{}]],"36":[["    ",{"fg":0,"bold":true}],[" 37 ",{"fg":3}],[" * the attached event handlers will be invoked automatically in the order they",{"fg":4,"bold":true}],["                                                                 ",{}]],"37":[["vim.php                                                                                                                                                ",{"bold":true,"inverse":true}]],"38":[["1 行被加入；before #1  26 秒之前                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"x":8,"visible":true}}],[0.026074,{"lines":{"39":[["                                                                                                                                            u          ",{}]]},"cursor":{"visible":false}}],[0.000197,{"lines":{"38":[["已位于最旧的改变                                                                                                                                       ",{}]],"39":[["                                                                                                                                                       ",{}]]},"cursor":{"visible":true}}],[0.030662,{}],[0.029529,{}],[0.031101,{}],[0.030437,{}],[0.030581,{}],[0.030038,{}],[0.030036,{}],[0.030896,{}],[0.031409,{}],[0.03103,{}],[0.030887,{}],[0.031206,{}],[0.030506,{}],[0.031747,{}],[0.030593,{}],[0.030155,{}],[0.030809,{}],[0.031958,{}],[0.029729,{}],[0.030127,{}],[0.030028,{}],[0.031423,{}],[0.138453,{"lines":{"39":[["                                                                                                                                            ^[         ",{}]]}}],[1.001347,{"lines":{"39":[["                                                                                                                                                       ",{}]]}}],[0.885648,{"lines":{"38":[[":                                                                                                                                                      ",{}]]},"cursor":{"x":1,"y":38}}],[0.339081,{"lines":{"38":[[":w                                                                                                                                                     ",{}]]},"cursor":{"x":2}}],[0.171589,{"lines":{"38":[[":wq                                                                                                                                                    ",{}]]},"cursor":{"x":3}}],[0.240403,{"lines":{"38":[["\"vim.php\"                                                                                                                                              ",{}]]},"cursor":{"x":9,"visible":false}}],[0.119324,{"lines":{"0":[["root@ubuntu:~# vim vim/vim.p                                                                                                                           ",{}]],"1":[["root@ubuntu:~# vim vim/vim.php                                                                                                                         ",{}]],"2":[["                                                                                                                                                       ",{}]],"3":[["                                                                                                                                                       ",{}]],"4":[["                                                                                                                                                       ",{}]],"5":[["                                                                                                                                                       ",{}]],"6":[["                                                                                                                                                       ",{}]],"7":[["                                                                                                                                                       ",{}]],"8":[["                                                                                                                                                       ",{}]],"9":[["                                                                                                                                                       ",{}]],"10":[["                                                                                                                                                       ",{}]],"11":[["                                                                                                                                                       ",{}]],"12":[["                                                                                                                                                       ",{}]],"13":[["                                                                                                                                                       ",{}]],"14":[["                                                                                                                                                       ",{}]],"15":[["                                                                                                                                                       ",{}]],"16":[["                                                                                                                                                       ",{}]],"17":[["                                                                                                                                                       ",{}]],"18":[["                                                                                                                                                       ",{}]],"19":[["                                                                                                                                                       ",{}]],"20":[["                                                                                                                                                       ",{}]],"21":[["                                                                                                                                                       ",{}]],"22":[["                                                                                                                                                       ",{}]],"23":[["                                                                                                                                                       ",{}]],"24":[["                                                                                                                                                       ",{}]],"25":[["                                                                                                                                                       ",{}]],"26":[["                                                                                                                                                       ",{}]],"27":[["                                                                                                                                                       ",{}]],"28":[["                                                                                                                                                       ",{}]],"29":[["                                                                                                                                                       ",{}]],"30":[["                                                                                                                                                       ",{}]],"31":[["                                                                                                                                                       ",{}]],"32":[["                                                                                                                                                       ",{}]],"33":[["                                                                                                                                                       ",{}]],"34":[["                                                                                                                                                       ",{}]],"35":[["                                                                                                                                                       ",{}]],"36":[["                                                                                                                                                       ",{}]],"37":[["                                                                                                                                                       ",{}]],"38":[["                                                                                                                                                       ",{}]]},"cursor":{"x":0,"y":2,"visible":true}}],[0.000327,{"lines":{"2":[["root@ubuntu:~#                                                                                                                                         ",{}]]},"cursor":{"x":15}}],[1.250548,{"lines":{"2":[["root@ubuntu:~# exit                                                                                                                                    ",{}]]},"cursor":{"x":0,"y":3}}]]