[[0.533561,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["                                                                      ",{}]],"1":[["                                                                                                                        ",{}]],"2":[["                                                                                                                        ",{}]],"3":[["                                                                                                                        ",{}]],"4":[["                                                                                                                        ",{}]],"5":[["                                                                                                                        ",{}]],"6":[["                                                                                                                        ",{}]],"7":[["                                                                                                                        ",{}]],"8":[["                                                                                                                        ",{}]],"9":[["                                                                                                                        ",{}]],"10":[["                                                                                                                        ",{}]],"11":[["                                                                                                                        ",{}]],"12":[["                                                                                                                        ",{}]],"13":[["                                                                                                                        ",{}]],"14":[["                                                                                                                        ",{}]],"15":[["                                                                                                                        ",{}]],"16":[["                                                                                                                        ",{}]],"17":[["                                                                                                                        ",{}]],"18":[["                                                                                                                        ",{}]],"19":[["                                                                                                                        ",{}]],"20":[["                                                                                                                        ",{}]],"21":[["                                                                                                                        ",{}]],"22":[["                                                                                                                        ",{}]],"23":[["                                                                                                                        ",{}]],"24":[["                                                                                                                        ",{}]],"25":[["                                                                                                                        ",{}]],"26":[["                                                                                                                        ",{}]],"27":[["                                                                                                                        ",{}]],"28":[["                                                                                                                        ",{}]],"29":[["                                                                                                                        ",{}]],"30":[["                                                                                                                        ",{}]],"31":[["                                                                                                                        ",{}]],"32":[["                                                                                                                        ",{}]],"33":[["                                                                                                                        ",{}]],"34":[["                                                                                                                        ",{}]],"35":[["                                                                                                                        ",{}]],"36":[["                                                                                                                        ",{}]],"37":[["                                                                                                                        ",{}]],"38":[["                                                                                                                        ",{}]],"39":[["                                                                                                                        ",{}]]},"cursor":{"x":50,"y":0,"visible":true}}],[1.851851,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["v                                                                     ",{}]]},"cursor":{"x":51}}],[0.099704,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["vi                                                                    ",{}]]},"cursor":{"x":52}}],[0.060751,{"cursor":{"x":53}}],[0.400093,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["vi util/concurrency/mvar.h                                            ",{}]]},"cursor":{"x":76}}],[0.950043,{"cursor":{"x":0,"y":1}}],[0.236234,{"lines":{"0":[["                                                                                                                        ",{}]],"39":[["\"util/concurrency/mvar.h\" 121L, 3501C                                                                                   ",{}]]},"cursor":{"x":37,"y":39,"visible":false}}],[0.050033,{"lines":{"0":[[" 46 ",{"fg":3}],["        {}                                                                                                          ",{}]],"1":[[" 47 ",{"fg":3}],["                                                                                                                    ",{}]],"2":[[" 48 ",{"fg":3}],["        ",{}],["// puts val into the MVar and returns true or returns false if full",{"fg":4}],["                                         ",{}]],"3":[[" 49 ",{"fg":3}],["        ",{}],["// never blocks",{"fg":4}],["                                                                                             ",{}]],"4":[[" 50 ",{"fg":3}],["        ",{}],["bool",{"fg":2}],[" tryPut(",{}],["const",{"fg":2}],[" T& val) {                                                                                 ",{}]],"5":[[" 51 ",{"fg":3}],["            ",{}],["// intentionally repeat test before and after lock",{"fg":4}],["                                                      ",{}]],"6":[[" 52 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == FULL) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                       ",{}]],"7":[[" 53 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{}]],"8":[[" 54 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == FULL) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                       ",{}]],"9":[[" 55 ",{"fg":3}],["                                                                                                                    ",{}]],"10":[[" 56 ",{"fg":3}],["            _state = FULL;                                                                                          ",{}]],"11":[[" 57 ",{"fg":3}],["            _value = val;                                                                                           ",{}]],"12":[[" 58 ",{"fg":3}],["                                                                                                                    ",{}]],"13":[[" 59 ",{"fg":3}],["            ",{}],["// unblock threads waiting to 'take'",{"fg":4}],["                                                                    ",{}]],"14":[[" 60 ",{"fg":3}],["            _condition.notify_all();                                                                                ",{}]],"15":[[" 61 ",{"fg":3}],["                                                                                                                    ",{}]],"16":[[" 62 ",{"fg":3}],["            ",{}],["return",{"fg":3}],[" ",{}],["true",{"fg":1}],[";                                                                                            ",{}]],"17":[[" 63 ",{"fg":3}],["        }                                                                                                           ",{}]],"18":[[" 64 ",{"fg":3}],["                                                                                                                    ",{}]],"19":[[" 65 ",{"fg":3}],["        ",{}],["// puts val into the MVar",{"fg":4}],["                                                                                   ",{}]],"20":[[" 66 ",{"fg":3}],["        ",{}],["// will block if the MVar is already full",{"fg":4}],["                                                                   ",{}]],"21":[[" 67 ",{"fg":3}],["        ",{}],["void",{"fg":2}],[" put(",{}],["const",{"fg":2}],[" T& val) {                                                                                    ",{}]],"22":[[" 68 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                              ",{"fg":7,"bg":1,"bold":true}],["                                          ",{}]]},"cursor":{"x":78,"y":22}}],[5.9e-05,{"lines":{"22":[[" 68 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{"fg":7,"bg":1,"bold":true}]],"23":[[" 69 ",{"fg":3}],["            ",{}],["while",{"fg":3}],[" (!tryPut(val)) {                                                                                  ",{}]],"24":[[" 70 ",{"fg":3}],["                ",{}],["// unlocks lock while waiting and relocks before returning",{"fg":4}],["                                          ",{}]],"25":[[" 71 ",{"fg":3}],["                _condition.wait(lock);                                                                              ",{}]],"26":[[" 72 ",{"fg":3}],["            }                                                                                                       ",{}]],"27":[[" 73 ",{"fg":3}],["        }                                                                                                           ",{}]],"28":[[" 74 ",{"fg":3}],["                                                                                                                    ",{}]],"29":[[" 75 ",{"fg":3}],["        ",{}],["// takes val out of the MVar and returns true or returns false if empty",{"fg":4}],["                                     ",{}]],"30":[[" 76 ",{"fg":3}],["        ",{}],["// never blocks",{"fg":4}],["                                                                                             ",{}]],"31":[[" 77 ",{"fg":3}],["        ",{}],["bool",{"fg":2}],[" tryTake(T& out) {                                                                                      ",{}]],"32":[[" 78 ",{"fg":3}],["            ",{}],["// intentionally repeat test before and after lock",{"fg":4}],["                                                      ",{}]],"33":[[" 79 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == EMPTY) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                      ",{}]],"34":[[" 80 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{}]],"35":[[" 81 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == EMPTY) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                      ",{}]],"36":[[" 82 ",{"fg":3}],["                                                                                                                    ",{}]],"37":[[" 83 ",{"fg":3}],["            _state = EMPTY;                                                                                         ",{}]],"38":[["util/concurrency/mvar.h [cpp]                                                                [line:68/121][col:20][ 56%]",{"bold":true,"inverse":true}]]},"cursor":{"x":23,"visible":true}}],[0.033211,{}],[1.198891,{"lines":{"39":[[":                                                                                                                       ",{}]]},"cursor":{"x":1,"y":39}}],[0.320422,{"lines":{"39":[[":qa                                                                                                                     ",{}]]},"cursor":{"x":3}}],[0.450071,{"lines":{"39":[[":q!                                                                                                                     ",{}]]}}],[0.31184,{"lines":{"39":[[":SrcExplToggle                                                                                                          ",{}]]},"cursor":{"x":14}}],[0.156148,{"lines":{"39":[[":q                                                                                                                      ",{}]]},"cursor":{"x":2}}],[0.409322,{"lines":{"39":[[":SrcExplToggle                                                                                                          ",{}]]},"cursor":{"x":14}}],[2.512155,{"lines":{"39":[["SrcExpl: Updating 'tags' file in (/home/ning/idning-github/mongo/src/mongo/util/concurrency)",{"fg":2}],["                            ",{}]]},"cursor":{"x":92,"visible":false}}],[0.099065,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["vi util/concurrency/mvar.h                                            ",{}]],"1":[["                                                                                                                        ",{}]],"2":[["                                                                                                                        ",{}]],"3":[["                                                                                                                        ",{}]],"4":[["                                                                                                                        ",{}]],"5":[["                                                                                                                        ",{}]],"6":[["                                                                                                                        ",{}]],"7":[["                                                                                                                        ",{}]],"8":[["                                                                                                                        ",{}]],"9":[["                                                                                                                        ",{}]],"10":[["                                                                                                                        ",{}]],"11":[["                                                                                                                        ",{}]],"12":[["                                                                                                                        ",{}]],"13":[["                                                                                                                        ",{}]],"14":[["                                                                                                                        ",{}]],"15":[["                                                                                                                        ",{}]],"16":[["                                                                                                                        ",{}]],"17":[["                                                                                                                        ",{}]],"18":[["                                                                                                                        ",{}]],"19":[["                                                                                                                        ",{}]],"20":[["                                                                                                                        ",{}]],"21":[["                                                                                                                        ",{}]],"22":[["                                                                                                                        ",{}]],"23":[["                                                                                                                        ",{}]],"24":[["                                                                                                                        ",{}]],"25":[["                                                                                                                        ",{}]],"26":[["                                                                                                                        ",{}]],"27":[["                                                                                                                        ",{}]],"28":[["                                                                                                                        ",{}]],"29":[["                                                                                                                        ",{}]],"30":[["                                                                                                                        ",{}]],"31":[["                                                                                                                        ",{}]],"32":[["                                                                                                                        ",{}]],"33":[["                                                                                                                        ",{}]],"34":[["                                                                                                                        ",{}]],"35":[["                                                                                                                        ",{}]],"36":[["                                                                                                                        ",{}]],"37":[["                                                                                                                        ",{}]],"38":[["                                                                                                                        ",{}]],"39":[["                                                                                                                        ",{}]]},"cursor":{"x":0,"y":2,"visible":true}}],[0.02999,{"lines":{"3":[["Press ENTER or type command to continue                                                                                 ",{}]]},"cursor":{"x":39,"y":3}}],[1.638825,{"lines":{"0":[["                                                                                                                        ",{}]],"3":[["                                                                                                                        ",{}]]}}],[0.029939,{"lines":{"0":[[" 51 ",{"fg":3}],["            ",{}],["// intentionally repeat test before and after lock",{"fg":4}],["                                                      ",{}]],"1":[[" 52 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == FULL) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                       ",{}]],"2":[[" 53 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{}]],"3":[[" 54 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == FULL) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                       ",{}]],"4":[[" 55 ",{"fg":3}],["                                                                                                                    ",{}]],"5":[[" 56 ",{"fg":3}],["            _state = FULL;                                                                                          ",{}]],"6":[[" 57 ",{"fg":3}],["            _value = val;                                                                                           ",{}]],"7":[[" 58 ",{"fg":3}],["                                                                                                                    ",{}]],"8":[[" 59 ",{"fg":3}],["            ",{}],["// unblock threads waiting to 'take'",{"fg":4}],["                                                                    ",{}]],"9":[[" 60 ",{"fg":3}],["            _condition.notify_all();                                                                                ",{}]],"10":[[" 61 ",{"fg":3}],["                                                                                                                    ",{}]],"11":[[" 62 ",{"fg":3}],["            ",{}],["return",{"fg":3}],[" ",{}],["true",{"fg":1}],[";                                                                                            ",{}]],"12":[[" 63 ",{"fg":3}],["        }                                                                                                           ",{}]],"13":[[" 64 ",{"fg":3}],["                                                                                                                    ",{}]],"14":[[" 65 ",{"fg":3}],["        ",{}],["// puts val into the MVar",{"fg":4}],["                                                                                   ",{}]],"15":[[" 66 ",{"fg":3}],["        ",{}],["// will block if the MVar is already full",{"fg":4}],["                                                                   ",{}]],"16":[[" 67 ",{"fg":3}],["        ",{}],["void",{"fg":2}],[" put(",{}],["const",{"fg":2}],[" T& val) {                                                                                    ",{}]],"17":[[" 68 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{"fg":7,"bg":1,"bold":true}]],"18":[[" 69 ",{"fg":3}],["            ",{}],["while",{"fg":3}],[" (!tryPut(val)) {                                                                                  ",{}]],"19":[[" 70 ",{"fg":3}],["                ",{}],["// unlocks lock while waiting and relocks before returning",{"fg":4}],["                                          ",{}]],"20":[[" 71 ",{"fg":3}],["                _conditio                                                                                           ",{}]]},"cursor":{"x":29,"y":20,"visible":false}}],[4.8e-05,{"lines":{"20":[[" 71 ",{"fg":3}],["                _condition.wait(lock);                                                                              ",{}]],"21":[[" 72 ",{"fg":3}],["            }                                                                                                       ",{}]],"22":[[" 73 ",{"fg":3}],["        }                                                                                                           ",{}]],"23":[[" 74 ",{"fg":3}],["                                                                                                                    ",{}]],"24":[[" 75 ",{"fg":3}],["        ",{}],["// takes val out of the MVar and returns true or returns false if empty",{"fg":4}],["                                     ",{}]],"25":[[" 76 ",{"fg":3}],["        ",{}],["// never blocks",{"fg":4}],["                                                                                             ",{}]],"26":[[" 77 ",{"fg":3}],["        ",{}],["bool",{"fg":2}],[" tryTake(T& out) {                                                                                      ",{}]],"27":[[" 78 ",{"fg":3}],["            ",{}],["// intentionally repeat test before and after lock",{"fg":4}],["                                                      ",{}]],"28":[[" 79 ",{"fg":3}],["            ",{}],["if",{"fg":3}],[" (_state == EMPTY) ",{}],["return",{"fg":3}],[" ",{}],["false",{"fg":1}],[";                                                                      ",{}]],"29":[["mvar.h [cpp]                                                                                 [line:68/121][col:20][ 56%]",{"bold":true,"inverse":true}]],"30":[["Source Explorer v5.3                                                                                                    ",{"fg":7,"bg":1,"bold":true}]],"31":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"38":[["Source_Explorer[-]                                                                               [line:1/1][col:1][100%]",{"inverse":true}]]},"cursor":{"x":23,"y":17,"visible":true}}],[0.109956,{"lines":{"30":[["[Jump List]: ",{"fg":7,"bg":1,"bold":true}],["scoped_lock",{"fg":0,"bg":5}],[" (8)                                                                                            ",{"fg":7,"bg":1,"bold":true}]],"31":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( mongo::mutex &m ) : $/                                    ",{}]],"32":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( RecursiveMutex &m ) : rm(m), nLocksByMe(rm.n.getRef()) { $",{}]],"33":[["/                                                                                                                       ",{}]],"34":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( SimpleMutex &m ) : _m(m) { _m.lock(); }$/                 ",{}]],"35":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"36":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"37":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"38":[["Source_Explorer[-]                                                                               [line:1/9][col:1][ 11%]",{"inverse":true}]]}}],[3.476897,{"lines":{"17":[[" 68 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{}]],"18":[[" 69 ",{"fg":3}],["            while (!tryPut(val)) {                                                                                  ",{"fg":7,"bg":1,"bold":true}]],"29":[["mvar.h [cpp]                                                                                 [line:69/121][col:20][ 57%]",{"bold":true,"inverse":true}]]},"cursor":{"y":18}}],[0.124346,{"lines":{"30":[["S",{"bg":6}],["ource Exp",{"fg":7,"bg":1,"bold":true}],["l",{"bg":6}],["orer v5.3                                                                                                    ",{"fg":7,"bg":1,"bold":true}]],"31":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"37":[["~                                                           ",{"fg":4,"bold":true}],["ck : boost::noncopyable {$/                                 ",{}]]},"cursor":{"x":60,"y":37,"visible":false}}],[3.3e-05,{"lines":{"37":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"38":[["Source_Explorer[-]                                                                               [line:1/1][col:1][100%]",{"inverse":true}]]},"cursor":{"x":23,"y":18,"visible":true}}],[0.080012,{"cursor":{"y":19,"visible":false}}],[0.011418,{"lines":{"18":[[" 69 ",{"fg":3}],["            ",{}],["while",{"fg":3}],[" (!tryPut(val)) {                                                                                  ",{}]],"19":[[" 70 ",{"fg":3}],["                // unlocks lock while waiting and relocks before returning                                          ",{"fg":7,"bg":1,"bold":true}]],"29":[["mvar.h [cpp]                                                                                 [line:70/121][col:20][ 57%]",{"bold":true,"inverse":true}]]},"cursor":{"visible":true}}],[0.118552,{"lines":{"30":[["Definition Not Found                                                                                                    ",{"fg":7,"bg":1,"bold":true}]]}}],[0.360198,{"lines":{"18":[[" 69 ",{"fg":3}],["            while (!tryPut(val)) {                                                                                  ",{"fg":7,"bg":1,"bold":true}]],"19":[[" 70 ",{"fg":3}],["                ",{}],["// unlocks lock while waiting and relocks before returning",{"fg":4}],["                                          ",{}]],"29":[["mvar.h [cpp]                                                                                 [line:69/121][col:20][ 57%]",{"bold":true,"inverse":true}]]},"cursor":{"y":18}}],[0.112605,{"lines":{"30":[["Source Explorer v5.3                                                                                                    ",{"fg":7,"bg":1,"bold":true}]]}}],[0.139196,{"lines":{"17":[[" 68 ",{"fg":3}],["            Mutex::scoped_lock lock(_mutex);                                                                        ",{"fg":7,"bg":1,"bold":true}]],"18":[[" 69 ",{"fg":3}],["            ",{}],["while",{"fg":3}],[" (!tryPut(val)) {                                                                                  ",{}]],"29":[["mvar.h [cpp]                                                                                 [line:68/121][col:20][ 56%]",{"bold":true,"inverse":true}]]},"cursor":{"y":17}}],[0.110498,{"lines":{"30":[["[Jump List]: ",{"fg":7,"bg":1,"bold":true}],["scoped_lock",{"fg":0,"bg":5}],[" (8)                                                                                            ",{"fg":7,"bg":1,"bold":true}]],"31":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( mongo::mutex &m ) : $/                                    ",{}]],"32":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( RecursiveMutex &m ) : rm(m), nLocksByMe(rm.n.getRef()) { $",{}]],"33":[["/                                                                                                                       ",{}]],"34":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( SimpleMutex &m ) : _m(m) { _m.lock(); }$/                 ",{}]],"35":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"36":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"37":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"38":[["Source_Explorer[-]                                                                               [line:1/9][col:1][ 11%]",{"inverse":true}]]}}],[0.962449,{"lines":{"39":[[":                                                                                                                       ",{}]]},"cursor":{"x":1,"y":39}}],[0.23911,{"lines":{"39":[[":q                                                                                                                      ",{}]]},"cursor":{"x":2}}],[0.786029,{"lines":{"39":[[":q!                                                                                                                     ",{}]]},"cursor":{"x":3}}],[0.549989,{"lines":{"0":[["[",{"bg":6}],["Jump List",{"fg":7,"bg":1,"bold":true}],["]",{"bg":6}],[": ",{"fg":7,"bg":1,"bold":true}],["scoped_lock",{"fg":0,"bg":5}],[" (8)                                                                                            ",{"fg":7,"bg":1,"bold":true}]],"1":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( mongo::mutex &m ) : $/                                    ",{}]],"2":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( RecursiveMutex &m ) : rm(m), nLocksByMe(rm.n.getRef()) { $",{}]],"3":[["/                                                                                                                       ",{}]],"4":[["[File Path]: mutex.h [Ex Command]: /^            scoped_lock( SimpleMutex &m ) : _m(m) { _m.lock(); }$/                 ",{}]],"5":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"6":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"7":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock : boost::noncopyable {$/                                 ",{}]],"8":[["[File Path]: mutex.h [Ex Command]: /^        class scoped_lock {$/                                                      ",{}]],"9":[["[File Path]: mutex.h [Ex Command]: /^    typedef mongo::mutex::scoped_lock scoped_lock;$/                               ",{}]],"10":[["~                                                      ",{"fg":4,"bold":true}],["                                                                 ",{}]]},"cursor":{"x":55,"y":10,"visible":false}}],[0.000114,{"lines":{"10":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"11":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"12":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"13":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"14":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"15":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"16":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"17":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"18":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"19":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"20":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"21":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"22":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"23":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"24":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"25":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"26":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"27":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"28":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"29":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"30":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"31":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"32":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"33":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"34":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"35":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"36":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"37":[["~                                                                                                                       ",{"fg":4,"bold":true}]],"38":[["Source_Explorer[-]                                                                               [line:1/9][col:1][ 11%]",{"bold":true,"inverse":true}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.82529,{"lines":{"39":[[":                                                                                                                       ",{}]]},"cursor":{"x":1,"y":39}}],[0.133863,{"lines":{"39":[[":q                                                                                                                      ",{}]]},"cursor":{"x":2}}],[0.309463,{"lines":{"39":[[":qa                                                                                                                     ",{}]]},"cursor":{"x":3}}],[0.141244,{"cursor":{"x":0,"visible":false}}],[0.009913999999999999,{}],[0.100009,{"lines":{"0":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["vi util/concurrency/mvar.h                                            ",{}]],"1":[["                                                                                                                        ",{}]],"2":[["                                                                                                                        ",{}]],"3":[["Press ENTER or type command to continue                                                                                 ",{}]],"4":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["                                                                      ",{}]],"5":[["                                                                                                                        ",{}]],"6":[["                                                                                                                        ",{}]],"7":[["                                                                                                                        ",{}]],"8":[["                                                                                                                        ",{}]],"9":[["                                                                                                                        ",{}]],"10":[["                                                                                                                        ",{}]],"11":[["                                                                                                                        ",{}]],"12":[["                                                                                                                        ",{}]],"13":[["                                                                                                                        ",{}]],"14":[["                                                                                                                        ",{}]],"15":[["                                                                                                                        ",{}]],"16":[["                                                                                                                        ",{}]],"17":[["                                                                                                                        ",{}]],"18":[["                                                                                                                        ",{}]],"19":[["                                                                                                                        ",{}]],"20":[["                                                                                                                        ",{}]],"21":[["                                                                                                                        ",{}]],"22":[["                                                                                                                        ",{}]],"23":[["                                                                                                                        ",{}]],"24":[["                                                                                                                        ",{}]],"25":[["                                                                                                                        ",{}]],"26":[["                                                                                                                        ",{}]],"27":[["                                                                                                                        ",{}]],"28":[["                                                                                                                        ",{}]],"29":[["                                                                                                                        ",{}]],"30":[["                                                                                                                        ",{}]],"31":[["                                                                                                                        ",{}]],"32":[["                                                                                                                        ",{}]],"33":[["                                                                                                                        ",{}]],"34":[["                                                                                                                        ",{}]],"35":[["                                                                                                                        ",{}]],"36":[["                                                                                                                        ",{}]],"37":[["                                                                                                                        ",{}]],"38":[["                                                                                                                        ",{}]],"39":[["                                                                                                                        ",{}]]},"cursor":{"x":50,"y":4,"visible":true}}],[1.29519,{"lines":{"4":[["ning@",{"fg":6,"bold":true}],["ning-laptop ",{"fg":2,"bold":true}],["~/idning-github/mongo/src/mongo",{"fg":1,"bold":true}],["$ ",{"fg":6,"bold":true}],["exit                                                                  ",{}]]},"cursor":{"x":0,"y":5}}]]